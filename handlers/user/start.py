from aiogram import Router, F
from aiogram.types import Message, KeyboardButton
from aiogram.filters import CommandStart
from aiogram.utils.chat_action import logger
from sqlalchemy import select
from sqlalchemy.exc import SQLAlchemyError

from config import ADMIN_IDS
from database import async_session
from models.models import User
from keyboards.user_kb import main_menu_kb  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message):
    tg_id = message.from_user.id
    username = message.from_user.username
    display_name = f"@{username}" if username else message.from_user.first_name

    async with async_session() as session:
        try:
            result = await session.execute(select(User).where(User.tg_id == tg_id))
            user = result.scalar_one_or_none()

            if not user:
                user = User(tg_id=tg_id, username=username or "–ë–µ–∑ username")
                session.add(user)
                await session.commit()
        except SQLAlchemyError as e:
            error_msg = str(e.__dict__.get('orig', e))
            logger.error(f"Database error on start: {error_msg}")
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {error_msg}")
            return

    keyboard = main_menu_kb(tg_id)

    await message.bot.send_chat_action(chat_id=message.chat.id, action="upload_photo")

    try:
        await message.answer_photo(
            photo="https://i.postimg.cc/qvP4nbbV/5846001388587437021.jpg",
            caption=(
                f"üè™ <b>Graff Monte Cristo</b>\n"
                f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{display_name}</b>!\n"
                f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω.\n\n"
                f"üõç –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –ª—É—á—à–∏–µ —Ç–æ–≤–∞—Ä—ã –ø–æ —Å–∞–º—ã–º –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º.\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ ‚¨áÔ∏è"
            ),
            reply_markup=keyboard,
            parse_mode="HTML"
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {e}")
        await message.answer(
            f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{display_name}</b>!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω.\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ ‚¨áÔ∏è",
            reply_markup=keyboard,
            parse_mode="HTML"
        )



