import json
from aiogram import F, Router
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

router = Router()

EXCHANGE_FILE = "exchange_text.json"

# –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
class AdminSetExchangeText(StatesGroup):
    waiting_for_text = State()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
def save_exchange_text(text: str):
    with open(EXCHANGE_FILE, "w", encoding="utf-8") as f:
        json.dump({"text": text}, f, ensure_ascii=False, indent=2)

# –•—ç–Ω–¥–ª–µ—Ä ‚Äî –Ω–∞–∂–∞—Ç–∏–µ –∞–¥–º–∏–Ω–æ–º –∫–Ω–æ–ø–∫–∏ "üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –æ–±–º–µ–Ω–Ω–∏–∫–æ–≤"
@router.callback_query(F.data == "admin_set_exchange_text")
async def admin_set_exchange_text(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ '–û–±–º–µ–Ω–Ω–∏–∫–∏':")
    await state.set_state(AdminSetExchangeText.waiting_for_text)
    await callback.answer()

# –•—ç–Ω–¥–ª–µ—Ä ‚Äî –ø—Ä–∏—ë–º —Ç–µ–∫—Å—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∞
@router.message(AdminSetExchangeText.waiting_for_text)
async def admin_save_exchange_text(message: Message, state: FSMContext):
    text = message.text
    save_exchange_text(text)
    await message.answer("‚úÖ –¢–µ–∫—Å—Ç –æ–±–º–µ–Ω–Ω–∏–∫–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω.")
    await state.clear()
